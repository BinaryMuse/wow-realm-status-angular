// Generated by CoffeeScript 1.6.3
var app;

app = angular.module('wowRealmStatus', []);

app.controller('RealmsController', function($scope, $timeout, $window, Realms, hashChange) {
  var refresh;
  $scope.realms = [];
  $scope.search = '';
  $scope.lastUpdate = null;
  hashChange(function(value) {
    return $scope.search = value;
  });
  $scope.updateHash = function() {
    return $window.location.hash = $scope.search;
  };
  refresh = function() {
    $scope.loading = true;
    return Realms(function(realms) {
      $scope.realms = realms;
      $scope.loading = false;
      $scope.lastUpdate = new Date();
      return $timeout(refresh, 60 * 5 * 1000);
    });
  };
  return refresh();
});

app.factory('Realms', function($http) {
  return function(cb) {
    var url;
    url = "http://us.battle.net/api/wow/realm/status?jsonp=JSON_CALLBACK";
    return $http.jsonp(url).success(function(json) {
      return cb(json.realms);
    });
  };
});

app.factory('hashChange', function($window, $rootScope) {
  return function(listener) {
    return window.onhashchange = function() {
      return $rootScope.$apply(function() {
        var _ref, _ref1;
        return listener((_ref = (_ref1 = $window.location.hash) != null ? _ref1.substr(1) : void 0) != null ? _ref : '');
      });
    };
  };
});

app.filter('realmType', function() {
  return function(type) {
    switch (type) {
      case 'pve':
        return "PvE";
      case 'pvp':
        return "PvP";
      case 'rp':
        return "RP";
      case 'rppvp':
        return "RP PvP";
    }
  };
});

app.filter('capitalize', function() {
  return function(str) {
    if (str) {
      return str[0].toUpperCase() + str.slice(1).toLowerCase();
    } else {
      return "";
    }
  };
});

app.filter('boolToString', function() {
  return function(boolean, trueString, falseString) {
    if (boolean) {
      return trueString;
    } else {
      return falseString;
    }
  };
});
